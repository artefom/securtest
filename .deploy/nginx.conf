server_tokens off;

# gzip enable
gzip on;
gzip_disable "MSIE [1-6]\.(?!.*SV1)";

# get request id from headers
map $http_x_request_id $my_request_id {
	default "$request_id";
    "~"     "$http_x_request_id";
}

# cache settings
map $sent_http_content_type $expires {
    default off;
    text/html epoch; #means no cache, as it is not a static page
    text/css 30d;
    application/javascript 30d;
    application/woff2 30d;
    ~image/ 30d; #it is only the logo, so maybe I could change it once a month now
}

# set custom log formant
log_format main_ext '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '"$host" sn="$server_name" rt=$request_time '
                    'ua="$upstream_addr" us="$upstream_status" '
                    'ut="$upstream_response_time" ul="$upstream_response_length" '
                    'cs=$upstream_cache_status';

server {
    listen 80;
    server_name localhost;
    charset utf-8;
    root /var/www;
    index index.html;
    autoindex off;
    client_max_body_size 0;

    set_real_ip_from 10.0.0.0/8;
    set_real_ip_from 172.16.0.0/12;
    set_real_ip_from 192.168.0.0/16;
    real_ip_header X-Real-IP;

    location / {
        try_files $uri $uri/ /index.html;
        expires $expires;
        gzip_http_version 1.1;
        gzip_vary on;
        gzip_comp_level 6;
        gzip_proxied any;
        gzip_types
            text/plain
            text/css
            text/js
            text/javascript
            text/x-js
            text/xml
            application/json
            application/x-javascript
            application/javascript
            application/xml
            application/xml+rss
            image/svg+xml;
        gzip_buffers 16 8k;
        add_header Cache-Control public;
    }

    location = /favicon.ico {
       access_log off;
       log_not_found off;
    }

    # Health check endpoint. This will be used by kubernetes to determine if the
    # container is ready/alive.
    location = /health {
        return 200 'OK';
    }

    access_log /var/log/nginx/access.log main_ext;
    error_log /var/log/nginx/error.log warn;
}
